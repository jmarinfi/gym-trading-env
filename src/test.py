import gymnasium as gym
import pandas as pd

from src.utils_env.custom_reward import simple_custom_reward


def preprocess(df: pd.DataFrame):
    df.dropna(inplace=True)  # Clean your data !
    return df

def create_env():
    return gym.make(
        "MultiDatasetTradingEnv",
        dataset_dir='data/*.pkl',
        preprocess=preprocess,
        positions=[-1, -0.5, 0, 1, 2],
        trading_fees=0.01 / 100,
        borrow_interest_rate=0.0003 / 100,
        reward_function=simple_custom_reward,
        portfolio_initial_value=1000,
        windows=30,
        verbose=0,
        max_episode_duration=168
    )


envs = gym.vector.SyncVectorEnv([create_env for _ in range(4)])
print(envs.reset())
'''
/home/joan/PycharmProjects/gym-trading-env/.venv/bin/python /home/joan/PycharmProjects/gym-trading-env/src/test.py 
(array([[[ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 1. ,  1. ]],

       [[ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [-0.5, -0.5]],

       [[ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 1. ,  1. ]],

       [[ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ],
        [ 0. ,  0. ]]], dtype=float32), {'idx': array([20470, 19096,  2970,  1805]), '_idx': array([ True,  True,  True,  True]), 'step': array([0, 0, 0, 0]), '_step': array([ True,  True,  True,  True]), 'date': array([numpy.datetime64('2022-10-03T02:00:00.000000000'),
       numpy.datetime64('2022-08-06T20:00:00.000000000'),
       numpy.datetime64('2019-05-05T06:00:00.000000000'),
       numpy.datetime64('2019-03-17T17:00:00.000000000')], dtype=object), '_date': array([ True,  True,  True,  True]), 'position_index': array([3, 1, 3, 2]), '_position_index': array([ True,  True,  True,  True]), 'position': array([ 1. , -0.5,  1. ,  0. ]), '_position': array([ True,  True,  True,  True]), 'real_position': array([ 1. , -0.5,  1. ,  0. ]), '_real_position': array([ True,  True,  True,  True]), 'data_close': array([19139.19, 23172.41,  5733.6 ,  3962.51]), '_data_close': array([ True,  True,  True,  True]), 'data_high': array([19241.17, 23200.  ,  5763.63,  3972.5 ]), '_data_high': array([ True,  True,  True,  True]), 'data_date_close': array([Timestamp('2022-10-03 03:00:00'), Timestamp('2022-08-06 21:00:00'),
       Timestamp('2019-05-05 07:00:00'), Timestamp('2019-03-17 18:00:00')],
      dtype=object), '_data_date_close': array([ True,  True,  True,  True]), 'data_volume': array([1.23287579e+04, 2.76040553e+03, 2.41662700e+01, 1.01421860e+01]), '_data_volume': array([ True,  True,  True,  True]), 'data_low': array([19127.17, 23103.03,  5720.  ,  3958.61]), '_data_low': array([ True,  True,  True,  True]), 'data_open': array([19223.25, 23186.32,  5748.  ,  3966.84]), '_data_open': array([ True,  True,  True,  True]), 'portfolio_valuation': array([1000., 1000., 1000., 1000.]), '_portfolio_valuation': array([ True,  True,  True,  True]), 'portfolio_distribution_asset': array([0.05224882, 0.        , 0.17441049, 0.        ]), '_portfolio_distribution_asset': array([ True,  True,  True,  True]), 'portfolio_distribution_fiat': array([   0, 1500,    0, 1000]), '_portfolio_distribution_fiat': array([ True,  True,  True,  True]), 'portfolio_distribution_borrowed_asset': array([0, 0, 0, 0]), '_portfolio_distribution_borrowed_asset': array([ True,  True,  True,  True]), 'portfolio_distribution_borrowed_fiat': array([0, 0, 0, 0]), '_portfolio_distribution_borrowed_fiat': array([ True,  True,  True,  True]), 'portfolio_distribution_interest_asset': array([0, 0, 0, 0]), '_portfolio_distribution_interest_asset': array([ True,  True,  True,  True]), 'portfolio_distribution_interest_fiat': array([0, 0, 0, 0]), '_portfolio_distribution_interest_fiat': array([ True,  True,  True,  True]), 'reward': array([0, 0, 0, 0]), '_reward': array([ True,  True,  True,  True])})
'''